### Starting build.
# Target: a1.mli.depends, tags: { extension:mli, file:a1.mli, ocaml, ocamldep, quiet }
ocamldep.opt -modules a1.mli > a1.mli.depends
# Target: a1.cmi, tags: { byte, compile, extension:mli, file:a1.mli, interf, ocaml, quiet }
ocamlc.opt -c -o a1.cmi a1.mli
# Target: a1.ml.depends, tags: { extension:ml, file:a1.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules a1.ml > a1.ml.depends
# Target: a1.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:a1.cmo, file:a1.ml, implem, ocaml, quiet }
ocamlc.opt -c -o a1.cmo a1.ml
+ ocamlc.opt -c -o a1.cmo a1.ml
File "a1.ml", line 152, characters 25-150:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
File "a1.ml", line 163, characters 16-66:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(PLUS|MINUS|MULT|CONJ|DISJ|CMP|EQUALS|PAREN|APP|RET|VAR _|NCONST _|BCONST _|
IFTE (_, _)|FCALL (_, _))
File "a1.ml", line 166, characters 0-70:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(BoolVal _|FuncVal (_, _))
File "a1.ml", line 171, characters 15-64:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(PLUS|MINUS|MULT|CONJ|DISJ|CMP|EQUALS|PAREN|APP|RET|VAR _|NCONST _|BCONST _|
IFTE (_, _)|FCALL (_, _))
File "a1.ml", line 174, characters 0-70:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(BoolVal _|FuncVal (_, _))
# Compilation successful.
